1. 
A = [10, 20, 30, 'd', 6.00, 7+ 0j, 8, 9, 1]

2. 
A = [ 1, 2, 3, 4, 5]
Ans = A[1, 3, 2]
Ans2 = A[-1]
Ans3 = A[5, -3, -1]
Ans4 = A[:3]

3.
Sum , pdt = 0, 1
For I in A:
	sum += A[I]
	pdt *= A[I]
print("Sum", sum, "Product", pdt)

4. 
Min, max = 100000000, 0
For I in A:
	Min = min(A[I], min)
	Max = max(A[I], max)

5.
Ans = []
For I in list:
	if list[I] % 2 == 1:
		ans.append(List[i])
6.
Ans = []
For I in range(0,31):
	if I <6 or I >24:
		ans.append(i*i)
	else:
		ans.append(i)

7. 
num1 = [1, 3, 5, 7, 9, 10]
num2 = [2, 4, 6, 8]
num1[-1:] = num2

8. 
a= {}
b= {}
Res = a|b
print(res)

9. 
Dict = {}
For I in range(0,n+1):
	dict[I] = I*I

#Task 4:

1. 
def reverse(string): 
    string = string[::-1] 
    return string

2.
def string_test(s):
    d={"UPPER_CASE":0, "LOWER_CASE":0}
    for c in s:
        if c.isupper():
           d["UPPER_CASE"]+=1
        elif c.islower():
           d["LOWER_CASE"]+=1
        else:
           pass
    print ("Original String : ", s)
    print ("No. of Upper case characters : ", d["UPPER_CASE"])
    print ("No. of Lower case Characters : ", d["LOWER_CASE"])


3.
def unique_list(l):
  x = []
  for a in l:
    if a not in x:
      x.append(a)
  return x

4.
items=[n for n in input().split('-')]
items.sort()
print('-'.join(items))

5.
lines = []
while True:
    l = input()
    if l:
        lines.append(l.upper())
    else:
        break;

for l in lines:
    print(l)

6.
Def calc(a,b):
	return (int(a) + int(b))


7.
Def stringlen(s1, s2):
	if len(s1) > len(s2):
		print(s1)
	elif len(s2) > len(s1):
		print(s2)
	else:
		print(s1, s2)

8.
l = list()
	for i in range(1,21):
		l.append(i**2)
	print(l)

9.
def number(limit):

for i in range(0, limit):
if i==0:
print(i,end=" ")
print("EVEN")

elif i%2==0:
print(i,end=" ")
print("EVEN")

else:
print(i,end=" ")

print("ODD")


10.

out = [] 
while(num < len(lis)):  
      
    # checking condition  
    if lis[num] % 2 == 0:  
        out.append(lis[num]) 
    # increment num  
    num += 1
  
  
# printing output 
print(out) 

11. 
eve_num = map(lambda x: x**2, filter(lambda   x: x%2==0, li))
 
print(eve_num)

12.
def divide():
    return 5/0

try:
    divide()
except ZeroDivisionError as ze:
    print("Why on earth you are dividing a number by ZERO!!")
except:
    print("Any other exception")

13.
joinedlist = list(itertools.chain(*lists))

14.
Num = [x for x in integers if x % 7 == 0 and x % 3 != 0]

15. 
Def multiply(n):
	return n*n
Result = map(multiply, num1) #num1 is input list
print(result)

16.
2

17.
after f
after f?